version: '3.7'

services:
  mongo:
    ports:
      - ${MONGO_PORT}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - ./mongo/initdb:/docker-entrypoint-initdb.d
      - ./mongo/sample/output:/sample
    networks:
      - mypcdb-local-network

  postgresql:
    environment:
      POSTGRES_DB: ${TYPEORM_DATABASE}
      POSTGRES_USER: ${TYPEORM_USERNAME}
      POSTGRES_PASSWORD: ${TYPEORM_PASSWORD}
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    ports:
      - ${TYPEORM_PORT}:5432
    networks:
      - mypcdb-local-network

  adminer:
    image: adminer:latest
    depends_on:
      - postgresql
    ports:
      - 8080:8080
    networks:
      - mypcdb-local-network

  compensator:
    build:
      context: ./compensator
      dockerfile: Dockerfile
    ports:
      - ${COMPENSATOR_PORT}:3000
    networks:
      - mypcdb-local-network

  bookcover-server:
    build:
      context: ./bookcover-server
      dockerfile: Dockerfile
    ports:
      - ${BOOKCOVER_SERVER_PORT}:4000
    depends_on:
      - mongo
      - compensator
    environment:
      COMPENSATOR_URL: ${COMPENSATOR_URL}
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_HOST: mongo
      MONGO_PORT: ${MONGO_PORT}
    networks:
      - mypcdb-local-network

volumes:
  postgresql-data:

networks:
  mypcdb-local-network:
    driver: bridge
